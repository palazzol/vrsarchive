#! /bin/sh
# anne.jones - censor headers
PATH=/bin:/usr/bin; export PATH
NEWSCTL=${NEWSCTL-/usr/lib/news}; export NEWSCTL
NEWSBIN=${NEWSBIN-/usr/lib/newsbin}; export NEWSBIN
NEWSARTS=${NEWSARTS-/usr/spool/news}; export NEWSARTS

# pass 0 - dredge up defaults
#---start mary.brown
if test -r $NEWSCTL/domain; then
	mydomain="`tr -d ' \11' <$NEWSCTL/domain | sed 's/^\.//' `"
else
	mydomain="uucp"
fi
# badsites="pucc.bitnet!"		# tailor, syntax is "host1!host2!...host3!"
# "test -r && cat" is used here instead of just "cat" because pre-v8
# cat's are broken and return good status when they can't read their files.
host=`((test -r $NEWSCTL/whoami && cat $NEWSCTL/whoami) || hostname ||
	(test -r /etc/whoami && cat /etc/whoami) ||
	uuname -l || uname -n || echo the_unknown_host) 2>/dev/null`.$mydomain
case "$LOGNAME" in
# next line assumes stderr is the user's tty
"")	: ${USER=`who am i <&2 | sed -e 's/[	 ].*//' -e '/!/s/^.*!//' `} ;;
*)	USER=$LOGNAME ;;
esac
case "$NAME" in
"")
	if test -s $HOME/.name; then
		NAME=`cat $HOME/.name`
	else
		NAME=`(grep "^$USER:" /etc/passwd || ypmatch "$USER" passwd) |
			sed 's/^[^:]*:[^:]*:[^:]*:[^:]*:\([^,:]*\).*$/\1/'`
		# for BTL RJE format, add
		# | sed -e 's/^[^-]*- *//' -e 's/ *(.*$//'
		# otherwise for Berkeley format, use this (courtesy Rayan Zachariassen)
		case "$NAME" in
		*'&'*)
			# generate Capitalised login name
			NM=`echo "$USER" | sed -e 's/^\(.\)\(.*\)/\1:\2/'`
			NM1=`expr "$NM" : '\(.\):.*' | tr a-z A-Z`
			NMR=`expr "$NM" : '.:\(.*\)'`
			CAPNM="$NM1$NMR"
			# turn & into Capitalised login name
			NAME=`echo "$NAME" | sed "s:&:$CAPNM:"`
			;;
		esac
	fi
	;;
esac
REALLYFROM="$USER@$host ($NAME)"

case "$PASSEDFROM" in
"")	FROM="$REALLYFROM" ;;
*)					# inews -f sender; avoid forgery
	FROM="$PASSEDFROM"
	SENDER="$REALLYFROM"
	;;
esac
#---end mary.brown
defpath="$USER"
deffrom="$FROM"
defdate="`set \`date\`; echo $1, $3-$2-\`echo $6 | sed 's/^..//'\` $4 $5`"
defmsgid="`set \`date\`; echo \<$6$2$3.\`echo $4 | tr -d :\`.$$@$host\>`"
deforg="`sed 1q $NEWSCTL/organi?ation`"

sed >/tmp/aj$$awk "s/DEFMSGID/$defmsgid/
s/DEFPATH/$defpath/
s/DEFFROM/$deffrom/
s/DEFDATE/$defdate/
s/DEFMSGID/$defmsgid/
s/DEFORG/$deforg/" <<\!
# pass 1 - note presence | absence of certain headers

# a header keyword: remember it and its value
/^[^\t ]*:/ { hdrval[$1] = $0; keyword=$1 }
# a continuation: concatenate this line to the value
!/^[^\t ]*:/ { hdrval[keyword] = hdrval[keyword] "\n" $0 }

END {
	# pass 2 - deduce & omit & emit headers
	subjname = "Subject:"
	ctlname = "Control:"
	ngname = "Newsgroups:"
	msgidname = "Message-ID:"
	typoname =  "Message-Id:"
	pathname = "Path:"
	datename = "Date:"
	fromname = "From:"
	orgname = "Organization:"
	distrname = "Distribution:"

	# fill in missing headers
	if (hdrval[typoname] != "") {	# spelling hack
		hdrval[msgidname] = hdrval[typoname]
		hdrval[typoname] = ""
		# fix spelling: Message-Id: -> Message-ID:
		nf = split(hdrval[msgidname], fields);	# bust up
		fields[1] = msgidname;		# fix spelling
		hdrval[msgidname] = fields[1];	# reassemble...
		for (i = 2; i <= nf; i++)
			hdrval[msgidname] = hdrval[msgidname] " " fields[i]
	}
	if (hdrval[msgidname] == "")
		hdrval[msgidname] = msgidname " " "DEFMSGID"
	if (hdrval[orgname] == "")
		hdrval[orgname] = orgname " " "DEFORG"

	# replace users headers (if any)
	hdrval[pathname] = pathname " " "DEFPATH"
	hdrval[fromname] = fromname " " "DEFFROM"
	hdrval[datename] = datename " " "DEFDATE"

	# snuff some headers
	distworld = distrname " world"
	if (hdrval[distrname] == distworld)
		hdrval[distrname] = ""

	# the cmsg hack
	if (substr(hdrval[subjname],1,14) == "Subject: cmsg ")
		hdrval[ctlname] = ctlname " " substr(hdrval[subjname],15)

	# warn if no Newsgroups:
	if (hdrval[ngname] == "")
		print "no newsgroups header!" | "cat >&2"

	# favour Newsgroups: & Control: for benefit of rnews
	if (hdrval[ngname] != "") {
		print hdrval[ngname]
		hdrval[ngname] = ""	# no Newsgroups: to print now
	}
	if (hdrval[ctlname] != "") {
		print hdrval[ctlname]
		hdrval[ctlname] = ""	# no Control: to print now
	}

	# B news kludgery: print Path: before From:
	if (hdrval[pathname] != "") {
		print hdrval[pathname]
		hdrval[pathname] = ""	# no Path: to print now
	}
	if (hdrval[fromname] != "") {
		print hdrval[fromname]
		hdrval[fromname] = ""	# no From: to print now
	}

	# have pity on readers: put Subject: next
	if (hdrval[subjname] != "") {
		print hdrval[subjname]
		hdrval[subjname] = ""	# no Subject: to print now
	}

	# print misc. headers in random order
	for (i in hdrval)
		if (hdrval[i] != "")
			print hdrval[i]
}
!

cat $* | tr -d '\1-\7\13\14\16-\37' |	# strip invisible chars, a la B news
	awk -f /tmp/aj$$awk
rm -f /tmp/aj$$awk
