#! /bin/sh
# inews [-p] [-d k] [-x site] [-hMD] [-t subj] [-n ng] [-e exp] [-F ref] \
#  [-d dist] [-a mod] [-f from] [-o org] [-C ng] [file...] - inject news:
#	censor locally-posted article and field the "inews -C" kludge;
#	munge the articles, enforce bogus and pathetic attempts at
#	Usenet security, generate lotsa silly headers.
NEWSCTL=${NEWSCTL-/usr/lib/news}	# export NEWSCTL
NEWSBIN=${NEWSBIN-/usr/lib/newsbin}	# export NEWSBIN
NEWSARTS=${NEWSARTS-/usr/spool/news}	# export NEWSARTS
PATH=$NEWSCTL:$NEWSBIN:$NEWSBIN/relay:/bin:/usr/bin:/usr/ucb; export PATH
PASSEDFROM='';	export PASSEDFROM	# passed to anne.jones in environ.
allowed=geoff			# tailor: local news admin (may be "")
debug=''			# flags
exclusion=''
hdrspresent=no
whoami=/tmp/in$$who		# just created to determine effective uid
input=/tmp/in$$in		# uncensored input
inhdrs=/tmp/in$$hdr		# generated by tear: headers
inbody=/tmp/in$$body		# generated by tear: body
censart=/tmp/in$$cens		# censored input
nglist=/tmp/in$$ngs		# newsgroups: list
modroute=/tmp/in$$route		# route to moderator's forwarder
rmlist="$inhdrs $inbody $input $censart $nglist $modroute"

umask 2
trap '' 1 2 15			# ignore signals to avoid losing articles

# "inews -p": invoke rnews
case "$1" in
-p)
	shift
	exec rnews $*		# rnews, bailing out at or near line 1
	;;
esac

# parse arguments: for options, cat headers onto $input; cat files onto $input
>$input
while :
do
	case $# in
	0)	break ;;		# arguments exhausted
	esac

	case "$1" in
	-debug)	shift; debug="$1" ;;		# peculiar to C news
	-x)	shift; exclusion="-x $1" ;;	# you're welcome, erik (2.11)
	-h)	hdrspresent=yes ;;
	-M)	# TODO: what's this *really* do? dunno, find out
		;;
	-D)	# obsolete, undocumented: meant "don't check for recordings".
		# last present in B 2.10.1, invoked by readnews for followups.
		;;
	-t)	shift; echo "Subject: $1" >>$input ;;
	-n)	shift; echo "Newsgroups: $1" >>$input ;;
	-e)	shift; echo "Expires: $1" >>$input ;;
	-F)	# undocumented in B 2.10.1, documented in B 2.11.
		shift; echo "References: $1" >>$input ;;
	-d)	shift; echo "Distribution: $1" >>$input ;;
	-a)	shift; echo "Approved: $1" >>$input ;;

	# pass next options as environment variables to anne.jones
	-f)	shift; PASSEDFROM="$1" ;;	# complex due to Sender:
	-o)	shift; ORGANIZATION="$1"; export ORGANIZATION ;;

	-[cC])
		# megakludge-o-rama
		# first, permit only to super-users
		>$whoami
		case "`ls -l $whoami | awk '{print $3}'`" in
		root|$allowed)	: a winner ;;
		*)
			echo "$0: only super-users may create news groups" >&2
			exit 1
			;;
		esac
		rm -f $whoami
		case "$1" in
		-c)	echo "Distribution: general" >>$input ;;
		esac
		shift			# skip -C
		case "$1" in
		*.*.*)	ng=news.announce ;;
		*.*)	ng="$1" ;;
		*)	ng="$1.$1" ;;
		esac
		cat <<! >>$input		# generate -C header
Newsgroups: $ng.ctl
Subject: cmsg newgroup $1
Control: newgroup $1

created by inews -C or inews -c.
!
		;;
	-*)
		echo "$0: bad option $1" >&2
		exit 1
		;;
	*)
		case "$hdrspresent" in
		no)	echo "" >>$input; hdrspresent=yes ;;
		esac
		cat "$1" >>$input		# is a filename; append file
		fileseen=yes
		;;
	esac
	shift		# pass option or filename (any value was done above)
done

# if no files named, read stdin
case "$fileseen" in
yes)	;;
*)
	case "$hdrspresent" in
	no)	echo "" >>$input; hdrspresent=yes ;;
	esac
	# capture incoming news in case inews fails
	if cat >>$input; then
		: far out
	else
		echo "$0: lost news; cat status $?" >&2
		exit 1
	fi
	;;
esac

# run the remainder in the background for the benefit of impatient people
( # mary.brown <$input >$censart	# censor the headers, glue on .signature
tear /tmp/in$$ <$input		# output in $inhdrs and $inbody
# bounce zero-line articles (bad idea for control messages)
#if test ! -s $inbody; then
#	echo "$0: no article body" >&2
#	rm -f $rmlist
#	exit 1
#fi
# post with new headers and .signature
(anne.jones <$inhdrs		# bash headers
 tr -d '\1-\7\13\14\16-\37' <$inbody # strip invisible chars from body, a la B news
 if test -r $HOME/.signature; then
	echo "-- "; sed 4q $HOME/.signature	# glue on first bit of signature
 fi) >$censart

# to post or to mail? that is the question; whether 'tis nobler in the mind
# to suffer the slings and arrows of outrageous mailers ... Bill Shakespeare
sed -n '/^Newsgroups:[	 ]/{
s/^Newsgroups:[	 ]*\(.*\)$/\1/p
q
}' <$inhdrs >$nglist
egrep "^(` sed 's/\./\\\\./
s/,/|/' <$nglist `) " $NEWSCTL/active |
	while read ng high low flag	# look at next group's active entry
	do
		case "$flag" in
		n)
			echo "$0: bugger off, $ng may not be posted to." >&2
			exit 1
			;;
		m)
			if grep -s '^Approved:[	 ]' $inhdrs; then
				rm $modroute		# just post normally
			else
				# un-Approved: mail it to the moderator(s).
				echo "%s" >$modroute	# in case no route
				# look for route for this group
				while read ngpat route
				do
					# a dreadful B 2.11 hack:
					# backbone|internet == all
					case "$ngpat" in
					backbone|internet)	ngpat="all" ;;
					esac
					if gngp -a "$ngpat" $nglist >/dev/null; then
						echo "$route" >$modroute
						break	# take only 1st match
					fi
				done <$NEWSCTL/mailpaths
			fi
			# ngpat and route are not set here, damn it!
			if test -s $modroute; then
				# a mod group! mail article to this moderator
				sendnews `sed "s/%s/\`echo $ng | tr . - \`/" \
					$modroute` <$censart
				rm -f $rmlist
				exit 0
			# $censart is used rather than a pipe to work around a bug in the 4.2 sh
			# which made it sometimes return the wrong exit status (that of anne.jones).
			elif serverrnews $exclusion -d "$debug" <$censart	# -s $NEWSARTS -l $NEWSCTL
			then
				rm -f $rmlist		# far out, it worked
				exit 0
			else
				status=$?
				echo "$0: failed news in $input; inews status $status" >&2
				exit $status
			fi
			;;
		y)
			# $censart is used rather than a pipe to work around a bug in the 4.2 sh
			# which made it sometimes return the wrong exit status (that of anne.jones).
			if serverrnews $exclusion -d "$debug" <$censart	# -s $NEWSARTS -l $NEWSCTL
			then
				rm -f $rmlist		# far out, it worked
				exit 0
			else
				status=$?
				echo "$0: failed news in $input; inews status $status" >&2
				exit $status
			fi
			;;
		esac
	done
) &
