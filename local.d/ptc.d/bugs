From littlei!omepd!mipos3!intelca!amd!amdcad!ames!rutgers!princeton!phoenix!asjoshi Tue Aug  4 19:06:29 PDT 1987
Article 143 of comp.sources.bugs:
Path: littlei!omepd!mipos3!intelca!amd!amdcad!ames!rutgers!princeton!phoenix!asjoshi
>From: asjoshi@phoenix.PRINCETON.EDU (Amit S. Joshi)
Newsgroups: comp.sources.bugs
Subject: Re: Pascal to C problems
Message-ID: <490@phoenix.PRINCETON.EDU>
Date: 2 Aug 87 19:31:24 GMT
References: <168@mergvax.UUCP>
Reply-To: asjoshi@phoenix.UUCP (Amit S. Joshi)
Distribution: usa
Organization: Princeton Univ. Computing and Information Technology
Lines: 20


Hi,

I did manage to get the c version to compile after some trivial changes:
1) A line (# 7501) in the concatenated verion had gotten split in the middle
of a function name - just joint it back.
2) At a number of places to write out comments the program wrote strings ending
with "*/\n". The compiler gave this as illegal char 134 but changing this 
string to "*/  \n"  fixed it.

I do find a problem though. The translated program fails to open files.
The statement 
reset(file,'junk.txt'); is recognized and translated to Reset(file,"junk.txt")
or some such thing but the compiler gives an error as incompatible types at 
this point.

The computer here is a Vax 8700 running Ultrix

Amit   

"There's a pleasure in being mad ... which none but madmen know!"  St. Dryden


From littlei!omepd!mipos3!intelca!amd!amdcad!ames!rutgers!clyde!motown!mergvax!restuccia Tue Aug  4 19:06:42 PDT 1987
Article 148 of comp.sources.bugs:
Path: littlei!omepd!mipos3!intelca!amd!amdcad!ames!rutgers!clyde!motown!mergvax!restuccia
>From: restuccia@mergvax.UUCP (Philip Restuccia)
Newsgroups: comp.sources.bugs
Subject: Pascal to C problems
Message-ID: <168@mergvax.UUCP>
Date: 1 Aug 87 19:57:12 GMT
Distribution: usa
Organization: Allied - Linotype , Hauppauge NY
Lines: 34


Hello, again, everyone!

I just tried compiling the Pascal to C translator recently submitted to
comp.sources.unix by Per Bergsten (v10i065), and had trouble with both the
Pascal and the C versions.  Here are copies of the output I got from make:

For the Pascal version, compiled with pc:

Fri Jul 31 08:42 1987  ptc.p:
In program ptc:
  w - constant version is never used
  w - constant floattyp is never used
  w - function oldfield is never used
Assembler:
"/tmp/p1024949", line 46550: Branch too far


And for the C version, compiled with cc:

"ptc.c", line 7882: compiler error: no table entry for op STASG


We are using 4.1bsd (!) Unix running on a Vax 11/780.

Has anyone gotten these sources to compile???  Does anyone know what the above
messages mean????  Help!!!!!


Thanks in advance.

					Philip Restuccia
					Linotype Company
					...!philabs!mergvax!restuccia


From littlei!omepd!mipos3!intelca!amd!amdcad!ames!husc6!psuvax1!vu-vlsi!swatsun!schwartz Sun Aug  9 00:20:28 PDT 1987
Article 1024 of comp.sources.d:
Path: littlei!omepd!mipos3!intelca!amd!amdcad!ames!husc6!psuvax1!vu-vlsi!swatsun!schwartz
>From: schwartz@swatsun (Scott Schwartz)
Newsgroups: comp.sources.d
Subject: latest bug in ptc
Message-ID: <1244@carthage.swatsun.UUCP>
Date: 6 Aug 87 19:06:39 GMT
Organization: Swarthmore College, Swarthmore PA
Lines: 50

Here is another bug in ptc  (published in comp.sources.unix)

Consider the following program:

    program main;
    type
      trecptr = ^trec;
      trec = record
        field: integer;
      end;

    procedure test(var recp: trecptr);
    begin
        recp^.field := 0;
    end;

    begin
    end.


What gets generated by ptc is:

    extern void exit();

    typedef int integer;
    extern char *strncpy();

    typedef struct S59 *    trecptr;
    typedef struct S59 {
        integer field;
    }   trec;

     void
    test(recp)
        trecptr *recp;
    {
        recp->->field = 0;		/* GAAAK !!! */
    }

    main()
	{
		exit(0);
	}


The bug seems to be in the handling of pointers to records passed as
var parameters.  Time to go dig into the source :-(
-- 
# Scott Schwartz 
# ...{{seismo,ihnp4}!bpa,cbmvax!vu-vlsi,sun!liberty}!swatsun!schwartz


From littlei!intelisc!omepd!mipos3!intelca!amd!amdcad!ames!husc6!psuvax1!vu-vlsi!swatsun!schwartz Sun Aug  9 00:20:39 PDT 1987
Article 1026 of comp.sources.d:
Path: littlei!intelisc!omepd!mipos3!intelca!amd!amdcad!ames!husc6!psuvax1!vu-vlsi!swatsun!schwartz
>From: schwartz@swatsun (Scott Schwartz)
Newsgroups: comp.sources.d
Subject: bugs in ptc
Message-ID: <1242@thebes.swatsun.UUCP>
Date: 5 Aug 87 00:23:55 GMT
Organization: Swarthmore College, Swarthmore PA
Lines: 27


Here's the latest bug report on the pascal to C translator (ptc) that was
just posted to comp.sources.unix.

Consider the following program:

	program test(input, output);
	var
	  ch: char;

	begin
	  read(ch);
	  writeln(ord(ch));
	end.

Run it through ptc, compile it, and try it out.  You'll be surprised.

After translation, any input returns \0 -- Clearly incorrect.
The problem is that the lookahead buffer [ (*f).buf in the code ]
is never initialized when reading from standard input or writing to
standard output.  I'm still thinking about what the cleanest way to
fix this is, considering that there are probably additional similar 
bugs hiding in there somewhere.  Any comments gang?

-- 
# Scott Schwartz 
# ...{{seismo,ihnp4}!bpa,cbmvax!vu-vlsi,sun!liberty}!swatsun!schwartz


