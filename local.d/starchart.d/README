STARCHART (rev 2)
----------------------------------------------------------------------------
Note: This version is upward compatable with the original "starchart" software
family, both in user interface and in continued support of the original
reduced Yale catalog. Thus, it may supplant old copies of the software without
fear that either shell scripts or file formats will become invalid.

However, both the new user interface and the extended catalog are
superior, as are extensions for additional labelling (Greek characters,
double star indicators, Messier objects), plus a mnemonic "finder" facility.
----------------------------------------------------------------------------

INSTALLATION INSTRUCTIONS:

[1]
Save the new posting of the reduced Yale Star Catalog under the name
"yale.star" (or use a copy of the old version). If the save directory is other
than the one in which the program lives, then check out the Makefile, which
allows path names to be specified for compilation.

Sites without much disk space may truncate the file yale.star at any point,
as the data is sorted in order of increasing magnitude (dimming).

Additonally, the optional files "messier.star" and "con.locs" should be
placed in the chosen directory. Entries in these files are unsorted. The
optional file "planet.star" is created on an as-needed basis by the softwaare
"planet.c", and might want a home in some less permanent (writable) location.

[2]
Do a "make all" to compile all software. They are described in the man pages
"starchart.1" and "planet.1" . All compile using starchart.c as the mainline,
with device driver specifics in modules of appropriate name.

[3]
You may now try "man test" to make an Orion pic file similar to the one
posted to the net. Or you may test by outputting to the tty display, using the
version "stardsp". This is described in the EXAMPLE section of the man page.

VERSION NOTES:

Tty display users (*sigh*) may which to alter "stardsp" to output
to the display using an appropriate number of of rows and columns
on the screen. (Presently 31x79 for a 32x80 display. 23x79 is a
bit sparse).  Find the ROWS and COLS #defines in stardsp.c
and update. Or be really ambitious and recode them as run time
variables.

Tektronix emulator users may wish to alter scaling parameters based on the
actual physical dimensions of the display raster, to get the cleanest possible
star glyphs on output. This is described at length in the beginning of the
driver "startek.c".

Pic file users: the #define PICFRAG can be adjusted downward
(presently 8) should your pic input overflow pic's buffers. This
happens when a long move,draw,draw,...,draw sequence happens.
Smaller  PICFRAGs make larger files, by forming fragmented
move,draw commands.

PostScript users: you may wish to play with the boiler-plate macros which
define star shapes (e.g. 's1' does first magnitude stars). This is mentioned
at the end of starchart.c

Laserjet users: the output of starlaser must be directed to
laserjet via raw connection, because it is largely sent in binary
8-bit format. The graphics memory might overflow if you use the
standard (oldest) 59k buffer laserjet (*sigh*). Anyway, I haven't
ever lost any relevant data on the sheet: the overflow has occurred on
the last few blank pixel rows of the graphics area. If you use
laserjet plus, you shouldn't have any problems.

Other devices: don't expect the authors to write a new driver for you :-)
Look through the sources - it's not so difficult after all... The module
"starimages.c" provides support for bitmap devices; the PostScript driver
is a good example of generating output in some graphics language.

More ambitious programmers may wish to extend the usefulness of these programs.
Be our guest, but carefully consider the proposed list of suggestions which
intentionally accompanies the main source code body "starchart.c". It is hoped
that future changes and major revisions and their subsequent integration will
be kept relatively simple by coordinating efforts and by not duplicating work.

awpaeth@watcgl (original author and revisions editor)
inp@amber.berkeley.EDU (revisionist for user interface)
pl@sibelius.intrin.FI (support for mini-Yale, Messier and finder catalogs)
